import java.util.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lucca Peregrino
 */
public class main {
    public static class No{
        private No ant;
        private int conteudo;
        private No proximo;

        public No(){
            ant = null;
            proximo = null;
        }
        
        public int getConteudo(){
            return conteudo;
        }
        public void setConteudo(int c){
            conteudo = c;
        }
        public No getAnterior(){
            return ant;
        }
        public void setAnterior(No a){
            ant = a;
        }
        public No getProximo(){
            return proximo;
        }
        public void setProximo(No p){
            proximo = p;
        }
        
}
    
    public static class Lista{
        private No inicio;
        private No fim;
        private int tamanho;
        private boolean isReversed = false;
        
        public Lista(){
            inicio = null;
            fim = null;
            tamanho = 0;
        }
        
        public void reverse() {
        No aux = inicio;
        inicio = fim;
        inicio = fim;
        isReversed = !isReversed;
        }
        
        /** Verifica se a Lista está vazia */
        public boolean vazia(){
            if (tamanho == 0 ) return true;
            else return false;
        }
        
        /**Obtém o tamanho da Lista*/
        public int tamanho() {
            return tamanho;
        }
        
        /** Obtém o i-ésimo elemento de uma lista
        Retorna o valor encontrado. */
        public int elemento (int pos) {
            
            No aux = inicio;
            int cont = 1;
            if (vazia()) return -1; // Consulta falhou

            if ((pos < 1) || (pos > tamanho))
                return -1; // Posicao invalida
            
            // Percorre a lista do 1o elemento até pos
            while (cont < pos){
                aux = aux.getProximo();
                cont++;
            }
        return aux.getConteudo();

}
        
        
       
        /** Insere nó em lista vazia */
        private void insereInicioLista(String valor) {
            int n = Integer.parseInt(valor);
           
            if (isReversed) { 
            String aux = Integer.toString(n);    
            reverse();
            insereFimLista(aux);
            }else{
            // Aloca memoria para um novo no */
            No novoNo = new No();

            // Insere novo elemento na cabeca da lista
            novoNo.setConteudo(n);
            novoNo.setAnterior(null);

            if (vazia()) {
                novoNo.setProximo(null);
                inicio = novoNo;
                fim = novoNo;
                
            }
            else{
               novoNo.setProximo(inicio);
                inicio.setAnterior(novoNo);
                inicio = novoNo;
            
            }
            tamanho++;
            return;
        }
            reverse();
    }
        
        /** Insere nó no fim da lista */
        private void insereFimLista(String valor){
            int n = Integer.parseInt(valor);
           
            if (isReversed) { 
            String aux = Integer.toString(n);    
            reverse();
            insereInicioLista(aux);
            }else{
            // Aloca memoria para um novo no */
            No novoNo = new No();

            // Insere novo elemento na cabeca da lista
            novoNo.setConteudo(n);
            novoNo.setProximo(null);

            if (vazia()) {
                novoNo.setAnterior(null);
                inicio = novoNo;
                fim = novoNo;
                
            }
            else{
               novoNo.setAnterior(fim);
                fim.setProximo(novoNo);
                fim = novoNo;
            
            }
            tamanho++;
            return;
        }
            reverse();

        }
        
       
        
        
        /** Remove elemento do início da lista */
        public void removeInicioLista() throws Exception {
        //If the queue is empty, throw an exception
        if (tamanho == 0) {
            throw new Exception("Empty queue");
        }
        
        //If the queue is reversed, then unreverse it and remove the element at the end
        if (isReversed) {
            reverse();
            removeFimLista();
        }
        
        //If it's not, then just remove the element at the front
        else{
            if (tamanho == 1) {
                inicio = null;
                fim = null;
            } else {
                No aux = inicio;
                inicio = inicio.getProximo();
                inicio.setAnterior(null);
                aux = null;
                
            }
            
            tamanho--;
            return;
        }
        
        //Reverse the queue back
        reverse();
        
    }
        

        // Remove elemento do fim da lista
        public void removeFimLista() throws Exception {
        //If the queue is empty, throw an exception
        if (tamanho == 0) {
            throw new Exception("Empty queue");
        }
        
        //If the queue is reversed, then unreverse it and remove the element at the front
        if (isReversed) {
            reverse();
            removeInicioLista();
        } 
        
        //If it's not, then just remove the element at the back
        else {
            if (tamanho == 1) {
                fim = null;
                inicio = null;
               
            } else {
                No aux = fim;
                fim = fim.getAnterior();
                fim.setProximo(null);
                aux = null;
            }
            
            tamanho--;
            return;
        }
        
        //Reverse the queue back
        reverse();

    }
        
        
        
    }
    
    public static void main(String[] args){
        Lista l = new Lista();
        
        
        Scanner s = new Scanner(System.in);
        Scanner t = new Scanner(System.in);
        String a = new String();
        
        int n = Integer.parseInt(s.nextLine());
        
        for(int i = 0;i<n;i++){
            a = t.nextLine();
            
          
            
            if(a.equals("back")){
                int aux = l.removeFimLista(i);
                if(aux != -1){
                    System.out.println(aux);
                }else{
                    
                }
            } 
            
            if(a.equals("front")){
                int aux = l.removeInicioLista(i);
                if(aux != -1){
                    System.out.println(aux);
                }else{
                     System.out.println("No job for Ada?");
                }
            }
            
            if(a.substring(0, 8).equals("push_back")){
                l.insereFimLista(a.substring(10, 11));
            }
            
            if(a.substring(0, 6).equals("toFront")){
                l.insereInicioLista(a.substring(8, 9));
            }
            
            if(a.equals("reverse")){
                l.reverse(l);
            }
            
        }
        
    }
    
}
